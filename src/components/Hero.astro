---
import SquareSvg from "../assets/svgs/square.svg";
const { t } = Astro.locals;
---

<div class="flex flex-col gap-y-12 items-center px-4 py-38 relative overflow-hidden" data-hero="true">
  <div class="max-w-5xl mx-auto size-full absolute top-0 left-1/2 -translate-x-1/2 -z-1">
    <SquareSvg class="hero-square text-blue absolute top-10 left-15 size-6" data-speed="1.5" />
    <SquareSvg class="hero-square text-yellow absolute right-25 top-20 size-9" data-speed="2.5" />
    <SquareSvg class="hero-square text-red absolute bottom-25 left-8 size-10" data-speed="3.0" />
    <SquareSvg class="hero-square text-green absolute bottom-20 right-11 size-9" data-speed="4.0" />
  </div>

  <div class="flex flex-col gap-y-8 items-center max-w-7xl relative z-10">
    <h1 class="text-[38px] md:text-5xl font-bold text-center max-w-100 md:max-w-105 leading-[normal]">
      <span class="inline px-4 text-white bg-dark line-box">{t("hero.title")}</span>
    </h1>

    <p class="text-2xl font-bold text-center max-w-100 md:max-w-150">
      {t("hero.subtitle")}
    </p>

    <p class="font-serif text-center max-w-100 md:max-w-150">
      {t("hero.description")}
    </p>
  </div>

  <a class="px-6 py-2 mx-auto font-bold uppercase rounded-sm bg-yellow" href="#contact-us">{t("hero.cta")}</a>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  const initHeroSquaresParallax = () => {
    const prefersMotion = window.matchMedia("(prefers-reduced-motion: no-preference)").matches;
    if (!prefersMotion) return;

    ScrollTrigger.matchMedia({
      "all": function () {
        const hero = document.querySelector<HTMLElement>("[data-hero=\"true\"]");
        if (!hero) return;

        const squares = document.querySelectorAll<HTMLElement>(".hero-square");

        squares.forEach((square, index) => {
          const speedAttr = square.getAttribute("data-speed");
          const speed = speedAttr ? parseFloat(speedAttr) : 1.0 + index * 0.5;

          // Only translateY; preserve initial CSS top/left/bottom/right
          // Negative distance to reverse Y-axis movement; lowered for subtlety
          const distance = -60 * speed;
          const rotation = 4 * speed * (index % 2 === 0 ? 1 : -1);

          gsap.fromTo(
            square,
            { y: 0, rotation: 0, transformOrigin: "50% 50%" },
            {
              y: distance,
              rotation,
              ease: "none",
              immediateRender: false,
              scrollTrigger: {
                trigger: hero,
                start: "top top",
                end: "bottom top",
                scrub: true,
                invalidateOnRefresh: true
              }
            }
          );
        });
      }
    });
  };

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initHeroSquaresParallax, { once: true });
  } else {
    initHeroSquaresParallax();
  }
</script>
